#!/bin/sh

usage() {
    cat >&2 << EOF
$0: simple llscheme driver

usage: cat <.scm> | llscheme -[hcSdvo]

options:
    -h             show this message
    -c             do not link, output a.o
    -S             do not assemble, output a.s
    -d             dump asttree
    -p             add (display) in every s-expr
    -v             verbose
    -o <file>      output file name
EOF
}

run_cmd() {
    [ x$VERBOSE = x1 ] && echo "$@"
    "$@"
}

cleanup() {
    rm -f $TEMPFILE
    rm -f $TEMPFILE2
}

trap cleanup QUIT INT EXIT

# temporary solution to handle runtime and linking
TEMPFILE=$(mktemp)
TEMPFILE2=$(mktemp)

PASSED_ARGS=
FINEPRINT=0
ASSEMBLE=1
LINK=1
OUTPUT=
VERBOSE=

while [ $# -gt 0 ]; do
    case $1 in
        -h | --help) usage; exit 0 ;;
        -d) FINEPRINT=1; PASSED_ARGS="-d" ;;
        -S) ASSEMBLE=0 ;;
        -c) LINK=0 ;;
        -o) shift; OUTPUT=$1 ;;
        -p) PASSED_ARGS="-p" ;;
        -v) VERBOSE=1 ;;
         *) break ;;
    esac
    shift
done

if [ x$FINEPRINT = x1 ]; then
    run_cmd ./llscheme.bin -d
    exit 0
fi

if [ x$ASSEMBLE = x0 ]; then
    if [ x$OUTPUT = x ]; then
        RES=a.s
    else
        RES=$OUTPUT
    fi
else
        RES=$TEMPFILE
fi

run_cmd ./llscheme.bin $PASSED_ARGS $@ 2> "$RES"
if [ x$ASSEMBLE = x0 ]; then
    exit 0
fi

if [ x$LINK = x0 ]; then
    if [ x$OUTPUT = x ]; then
        RES=a.o
    else
        RES=$OUTPUT
    fi
else
        RES=$TEMPFILE2
fi

run_cmd llvm-as $TEMPFILE -f -o "$RES"
if [ x$LINK = x0 ]; then
    exit 0
fi

if [ x$OUTPUT = x ]; then
    OUTPUT=a.out
fi

run_cmd llvm-ld -native $TEMPFILE2 -Lruntime -llsrt -lgc -o "$OUTPUT"
